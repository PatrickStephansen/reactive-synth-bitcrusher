{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./bitcrusher.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","registerProcessor","AudioWorkletProcessor","defaultValue","minValue","maxValue","automationRate","super","this","fractionalBitDepthMode","port","onmessage","handleMessage","fractionalBitDepthModes","trve","continuous","event","data","type","newMode","wasmModule","set_mode","internalProcessorPtr","initWasmModule","wasmBinary","binary","compiledModule","WebAssembly","compile","instantiate","init","float32WasmMemory","Float32Array","memory","buffer","inputs","outputs","parameters","length","set","get_input_ptr","bitDepth","get_bit_depth_ptr","outputPointer","process_quantum","channelIndex","sample"],"mappings":"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","file":"bitcrusher.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const bytesPerMemorySlot = 32 / 8;\n\nregisterProcessor(\n\t\"reactive-synth-bitcrusher\",\n\tclass Bitcrusher extends AudioWorkletProcessor {\n\t\tstatic get parameterDescriptors() {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tname: \"bitDepth\",\n\t\t\t\t\tdefaultValue: 8,\n\t\t\t\t\tminValue: 1,\n\t\t\t\t\tmaxValue: 32,\n\t\t\t\t\tautomationRate: \"a-rate\"\n\t\t\t\t}\n\t\t\t];\n\t\t}\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.fractionalBitDepthMode = \"quantize-evenly\";\n\t\t\tthis.port.onmessage = this.handleMessage.bind(this);\n\t\t\tthis.fractionalBitDepthModes = {\n\t\t\t\ttrve: 0,\n\t\t\t\t\"quantize-evenly\": 1,\n\t\t\t\tcontinuous: 2\n\t\t\t};\n\t\t}\n\n\t\thandleMessage(event) {\n\t\t\tif (\n\t\t\t\tevent.data &&\n\t\t\t\tevent.data.type === \"change-fractional-bit-depth-mode\"\n\t\t\t) {\n\t\t\t\tthis.fractionalBitDepthMode = event.data.newMode;\n\t\t\t\tthis.wasmModule.exports.set_mode(\n\t\t\t\t\tthis.internalProcessorPtr,\n\t\t\t\t\tthis.fractionalBitDepthModes[this.fractionalBitDepthMode]\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (event.data && event.data.type === \"wasm\") {\n\t\t\t\tthis.initWasmModule(event.data.wasmBinary);\n\t\t\t}\n\t\t}\n\n\t\tasync initWasmModule(binary) {\n\t\t\tconst compiledModule = await WebAssembly.compile(binary);\n\t\t\tthis.wasmModule = await WebAssembly.instantiate(compiledModule, {});\n\t\t\tthis.internalProcessorPtr = this.wasmModule.exports.init(\n\t\t\t\t128,\n\t\t\t\tthis.fractionalBitDepthModes[this.fractionalBitDepthMode]\n\t\t\t);\n\t\t\tthis.float32WasmMemory = new Float32Array(\n\t\t\t\tthis.wasmModule.exports.memory.buffer\n\t\t\t);\n\t\t}\n\n\t\tprocess(inputs, outputs, parameters) {\n\t\t\t// only process once wasm module ready and input plugged in\n\t\t\tif (inputs[0][0].length && this.wasmModule) {\n\t\t\t\tthis.float32WasmMemory.set(\n\t\t\t\t\tinputs[0][0],\n\t\t\t\t\tthis.wasmModule.exports.get_input_ptr(this.internalProcessorPtr) /\n\t\t\t\t\t\tbytesPerMemorySlot\n\t\t\t\t);\n\t\t\t\tthis.float32WasmMemory.set(\n\t\t\t\t\tparameters.bitDepth,\n\t\t\t\t\tthis.wasmModule.exports.get_bit_depth_ptr(this.internalProcessorPtr) /\n\t\t\t\t\t\tbytesPerMemorySlot\n\t\t\t\t);\n\t\t\t\tconst outputPointer =\n\t\t\t\t\tthis.wasmModule.exports.process_quantum(\n\t\t\t\t\t\tthis.internalProcessorPtr,\n\t\t\t\t\t\tinputs[0][0].length,\n\t\t\t\t\t\tparameters.bitDepth.length\n\t\t\t\t\t) / bytesPerMemorySlot;\n\t\t\t\t// expect mono input and output, but deal with more channels without falling over (only first input channel used)\n\t\t\t\tfor (\n\t\t\t\t\tlet channelIndex = 0;\n\t\t\t\t\tchannelIndex < outputs[0].length;\n\t\t\t\t\tchannelIndex++\n\t\t\t\t) {\n\t\t\t\t\tfor (\n\t\t\t\t\t\tlet sample = 0;\n\t\t\t\t\t\tsample < outputs[0][channelIndex].length;\n\t\t\t\t\t\tsample++\n\t\t\t\t\t) {\n\t\t\t\t\t\toutputs[0][channelIndex][sample] = this.float32WasmMemory[\n\t\t\t\t\t\t\toutputPointer + sample\n\t\t\t\t\t\t];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// browsers don't conform to the spec, so always return true or the module will be silent forever\n\t\t\treturn true;\n\t\t}\n\t}\n);\n"],"sourceRoot":""}